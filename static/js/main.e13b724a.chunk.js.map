{"version":3,"sources":["components/languages/Vocabulary.js","App.context.jsx","components/header/header.js","components/about/about.js","components/resume/resume.js","components/portfolio/portfolio.js","components/testimonials/testimonials.js","components/footer/footer.js","App.jsx","serviceWorker.js","index.js"],"names":["it_IT","en_GB","_It_IT","Vocabulary","code","AppCtxStore","React","createContext","AppContext","props","autoBind","languageCode","localStorage","getItem","state","vocabulary","languages","language_code","language_info","this","setState","Provider","value","Consumer","context","children","Component","Header","getVocabulary","getLanguages","Fragment","id","className","href","title","show_navigation","hide_navigation","home","about","resume","works","testimonials","onChange","event","setLanguage","target","map","language","k","key","homeTitle","ReactStringReplace","homeDescription","match","i","contextType","About","src","alt","about_me","about_me_description","contact_details","download_resume_link","download","download_resume","Resume","education","education_elements","e","name","date","work","work_elements","role","date_start","date_to","description","skills","skills_description","Portfolio","check_out_works","works_elements","icon","image","used","usedName","details","close","Testimonials","client_testimonials","testimonials_elements","from","Footer","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e13b724a.chunk.js","sourcesContent":["import en_GB from \"./en_GB.json\"\nimport _It_IT from \"./it_IT.json\"\n\nvar it_IT = { ...en_GB, ..._It_IT }\n\n/**\n * Pass a lang code and return a formatted vocabulary\n * \n * @param {string} string Lang code like en_GB.\n *\n * @return {object} Return a object with all formatted string in the code language.\n */\nexport function Vocabulary(code) {\n    switch (code) { \n        case 'en_GB':\n            return en_GB\n        case 'it_IT':\n            return it_IT\n        default:\n            return en_GB\n    }\n}\n\n/**\n * Get code and info or all languages\n *\n * @return {object} Return a object with language_code && language_info data.\n */\nexport function GetLanguages() {\n    return [\n        {\n            language_code: en_GB.language_code,\n            language_info: en_GB.language_info\n        },\n        {\n            language_code: it_IT.language_code,\n            language_info: it_IT.language_info\n        }\n    ]\n}\n\n/**\n * Pass a string with markers and return the complete string\n * \n * @prototype StringFormat('Set {0} as realm, set {1} as launcher!', 'Blackfrost', 'AS')\n * \n * @param {string} string The string with all markers.\n * @param {string} string A string for every marker.\n */\nexport function StringCompletion(format) {\n    var args = Array.prototype.slice.call(arguments, 1)\n    return format.replace(/{(\\d+)}/g, function (match, number) {\n        return typeof args[number] != 'undefined'\n            ? args[number]\n            : ''\n    })\n}","import React from \"react\"\nimport autoBind from \"react-autobind\"\nimport { Vocabulary, GetLanguages} from \"./components/languages/Vocabulary\"\n\n/** @instance @type {AppContext} */\nexport const AppCtxStore = React.createContext({})\n\nexport const user = {\n    id: 0\n}\n\nexport default class AppContext extends React.Component {\n    constructor(props) {\n        super(props)\n        autoBind(this);\n\n        let languageCode = localStorage.getItem(\"language\");\n\n        if (languageCode === null || languageCode === '') {\n            languageCode = \"en_GB\"\n        }\n\n        this.state = {\n            languageCode: languageCode,\n            vocabulary: Vocabulary(languageCode),\n            languages: GetLanguages()\n        }\n    }\n\n    /**\n     * Actions\n     * @param {*} languageCode \n     */\n    async setLanguage(languageCode) {\n        await this.setState({\n            languageCode: languageCode,\n            vocabulary: Vocabulary(languageCode)\n        })\n\n    }\n    \n    getLanguageCode() {\n        return this.state.languageCode ? this.state.languageCode : 'en_GB';\n    }\n\n    getVocabulary() {\n        return this.state.vocabulary ? this.state.vocabulary : Vocabulary('en_GB');\n    }\n\n    getLanguages() {\n        return this.state.languages ? this.state.languages : null\n    }\n\n    render() {\n        return <AppCtxStore.Provider value={this}>\n            <AppCtxStore.Consumer>\n                {context => this.props.children(context)}\n            </AppCtxStore.Consumer>\n        </AppCtxStore.Provider>\n    }\n}\n","import React, { Component } from 'react'\nimport ReactStringReplace from \"react-string-replace\"\nimport { AppCtxStore } from \"../../App.context\"\nexport default class Header extends Component {\n  static contextType = AppCtxStore\n  render() {\n    var vocabulary = this.context.getVocabulary()\n    var languages = this.context.getLanguages()\n    return (\n      <React.Fragment>\n      <header id=\"home\">\n        <nav id=\"nav-wrap\" className=\"no-print\">\n          {/* eslint-disable-next-line*/}\n          <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">{vocabulary.show_navigation}</a>\n          {/* eslint-disable-next-line*/}\n          <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">{vocabulary.hide_navigation}</a>\n          <ul id=\"nav\" className=\"nav no-print\">\n            {/* eslint-disable-next-line*/}\n            <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">{vocabulary.home}</a></li>\n            {/* eslint-disable-next-line*/}\n            <li><a className=\"smoothscroll\" href=\"#about\">{vocabulary.about}</a></li>\n            {/* eslint-disable-next-line*/}\n            <li><a className=\"smoothscroll\" href=\"#resume\">{vocabulary.resume}</a></li>\n            {/* eslint-disable-next-line*/}\n            <li><a className=\"smoothscroll\" href=\"#portfolio\">{vocabulary.works}</a></li>\n            {/* eslint-disable-next-line*/}\n            <li><a className=\"smoothscroll\" href=\"#testimonials\">{vocabulary.testimonials}</a></li>\n            <li className=\"no-print\">\n              {/* eslint-disable-next-line*/}\n              <a>\n                <select onChange={(event) => { this.context.setLanguage(event.target.value) }} className=\"language_select\">\n                  {\n                    languages.map((language, k)=>(\n                      <option value={language.language_code} key={\"language-\" + k} className=\"language_select\">{language.language_info}</option>\n                    ))\n                  }\n                </select>\n              </a>\n            </li>\n\n          </ul> {/* end #nav */}\n        </nav> {/* end #nav-wrap */}\n        <div className=\"row banner\">\n          <div className=\"banner-text\">\n            <h1 className=\"responsive-headline\">{vocabulary.homeTitle}</h1>\n            <h3>\n              {\n                ReactStringReplace(vocabulary.homeDescription, /@(\\w+)/g, (match, i) => (\n                  <span key={match + i}>{match}</span>\n                ))\n              }\n            </h3>\n            <hr />\n            <ul className=\"social no-print\">\n              <li><a href=\"https://www.facebook.com/nello1997\"><i className=\"fa fa-facebook\" /></a></li>\n              <li><a href=\"https://wa.me/+393457086780\"><i className=\"fa fa-whatsapp\" /></a></li>\n              <li><a href=\"https://github.com/Nek97\"><i className=\"fa fa-github\" /></a></li>\n              <li><a href=\"https://www.linkedin.com/in/devnek97/\"><i className=\"fa fa-linkedin\" /></a></li>\n              <li><a href=\"https://www.instagram.com/nek97/\"><i className=\"fa fa-instagram\" /></a></li>\n            </ul>\n          </div>\n        </div>\n        <p className=\"scrolldown no-print\">\n          <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\" /></a>\n        </p>\n      </header>\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from 'react'\nimport ReactStringReplace from \"react-string-replace\"\nimport { AppCtxStore } from \"../../App.context\"\nexport default class About extends Component {\n    static contextType = AppCtxStore\n    render() {\n        var vocabulary = this.context.getVocabulary()\n        return (\n            <React.Fragment>\n                {/*generated code*/}\n                <section id=\"about\">\n                    <div className=\"row\">\n                        <div className=\"three columns\">\n                            <img className=\"profile-pic\" src=\"images/profilepic.jpg\" alt=\"\" />\n                        </div>\n                        <div className=\"nine columns main-col\">\n                            <h2>\n                                {vocabulary.about_me}\n                            </h2>\n                            <p>\n                                {\n                                    ReactStringReplace(vocabulary.about_me_description, /#/g, (match, i) => (\n                                    <br />\n                                    ))\n                                }\n                            </p>\n                            <div className=\"row\">\n                                <div className=\"columns contact-details\">\n                                    <h2>\n                                        {vocabulary.contact_details}\n                                    </h2>\n                                    <p className=\"address\">\n                                        <span>Aniello Tortora</span><br />\n                                        <span>Nocera Inferiore, SA 84014 IT</span><br />\n                                        <span>tortora.aniello.ta@gmail.com</span><br />\n                                        <span>+39 3457086780</span><br />\n                                    </p>\n                                </div>\n                                <div className=\"columns download\">\n                                    <p>\n                                        {/* eslint-disable-next-line*/}\n                                        <a href={vocabulary.download_resume_link} className=\"button no-print\" download><i className=\"fa fa-download\" />{vocabulary.download_resume}</a>\n                                    </p>\n                                </div>\n                            </div> {/* end row */}\n                        </div> {/* end .main-col */}\n                    </div>\n                </section>\n            </React.Fragment>\n        );\n    }\n}","import React, { Component } from 'react'\nimport { AppCtxStore } from \"../../App.context\"\nexport default class Resume extends Component {\n  static contextType = AppCtxStore\n  render() {\n    var vocabulary = this.context.getVocabulary()\n    return (\n      <React.Fragment>\n      {/*generated code*/}\n      <section id=\"resume\">\n        {/* Education\n      ----------------------------------------------- */}\n        <div className=\"row education\">\n          <div className=\"three columns header-col\">\n            <h1><span>{vocabulary.education}</span></h1>\n          </div>\n          <div className=\"nine columns main-col\">\n            {\n              vocabulary.education_elements.map((e, k)=>(\n                <div className=\"row item\" key={\"education\" + k}>\n                  <div className=\"twelve columns\">\n                    <h3>{e.name}</h3>\n                    <p className=\"info\">{e.state} <span>•</span> <em className=\"date\">{e.date}</em></p>\n                  </div>\n                </div>\n              ))\n            }\n          </div> {/* main-col end */}\n        </div> {/* End Education */}\n        {/* Work\n      ----------------------------------------------- */}\n        <div className=\"row work\">\n          <div className=\"three columns header-col\">\n            <h1><span>{vocabulary.work}</span></h1>\n          </div>\n          <div className=\"nine columns main-col\">\n            {\n              vocabulary.work_elements.map((e, k)=>(\n                <div className=\"row item\">\n                  <div className=\"twelve columns\">\n                    <h3>{e.name}</h3>\n                    <p className=\"info\">{e.role} <span>•</span> <em className=\"date\">{e.date_start} - {e.date_to}</em></p>\n                    <p className=\"break-word\">\n                      {e.description}\n                    </p>\n                  </div>\n                </div>\n              ))\n            }\n          </div> {/* main-col end */}\n        </div> {/* End Work */}\n        {/* Skills\n      ----------------------------------------------- */}\n        <div className=\"row skill\">\n          <div className=\"three columns header-col\">\n            <h1><span>{vocabulary.skills}</span></h1>\n          </div>\n          <div className=\"nine columns main-col\">\n            <p>\n              {vocabulary.skills_description}\n            </p>\n            <div className=\"bars\">\n              <ul className=\"skills\">\n                <li><span className=\"bar-expand reactjs\" /><em>ReactJS</em></li>\n                <li><span className=\"bar-expand javascript\" /><em>Javascript / NodeJS</em></li>\n                <li><span className=\"bar-expand graphql\" /><em>GraphQL / Apollo Framework</em></li>\n                <li><span className=\"bar-expand typescript\" /><em>Typescript / Angular</em></li>\n                <li><span className=\"bar-expand bootstrap\" /><em>Bootstrap Framework</em></li>\n                <li><span className=\"bar-expand php\" /><em>PHP</em></li>\n                <li><span className=\"bar-expand html\" /><em>HTML & CSS</em></li>\n                <li><span className=\"bar-expand testing\" /><em>Testing / Debugging</em></li>\n                <li><span className=\"bar-expand electron\" /><em>Electron</em></li>\n                <li><span className=\"bar-expand vscode\" /><em>VS Code</em></li>\n                <li><span className=\"bar-expand sql\" /><em>SQL Database</em></li>\n                <li><span className=\"bar-expand jquery\" /><em>jQuery</em></li>\n              </ul>\n            </div>{/* end skill-bars */}\n          </div> {/* main-col end */}\n        </div> {/* End skills */}\n      </section>\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from 'react'\nimport { AppCtxStore } from \"../../App.context\"\nexport default class Portfolio extends Component {\n  static contextType = AppCtxStore\n  render() {\n    var vocabulary = this.context.getVocabulary()\n    return (\n      <React.Fragment>\n      {/*generated code*/}\n      <section id=\"portfolio\">\n        <div className=\"row\">\n          <div className=\"twelve columns collapsed\">\n            <h1>{vocabulary.check_out_works}</h1>\n            {/* portfolio-wrapper */}\n            <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">  \n              {\n                vocabulary.works_elements.map((e, k)=>(\n                  <div className=\"columns portfolio-item\" key={\"portfolio_element_\" + k}>\n                    <div className=\"item-wrap\">\n                      {/* eslint-disable-next-line*/}\n                      <a href={\"#modal-\" + k} title>\n                        <img alt=\"\" src={e.icon} />\n                        <div className=\"overlay\">\n                          <div className=\"portfolio-item-meta\">\n                            <h5>{e.name}</h5>\n                            <p>{e.role}</p>\n                          </div>\n                        </div>\n                        <div className=\"link-icon\"><i className=\"icon-plus\" /></div>\n                      </a>\n                    </div>\n                  </div>\n                ))\n              }\n            </div> {/* portfolio-wrapper end */}\n          </div> {/* twelve columns end */}\n          {/* Modal Popup\n\t      --------------------------------------------------------------- */}\n          {\n            vocabulary.works_elements.map((e, k)=>(\n              <div id={\"modal-\" + k} key={\"modal-\" + k} className=\"popup-modal mfp-hide\">\n                <img className=\"scale-with-grid\" src={e.image} alt=\"\" />\n                <div className=\"description-box\">\n                  <h4>{e.name}</h4>\n                  <p>{e.description}</p>\n                  <span className=\"categories\">\n                    <i className=\"fa fa-tag\" />\n                    {\n                      e.used.map((usedName, k) => (k?', '+usedName: usedName))\n                    }\n                  </span>\n                </div>\n                <div className=\"link-box\">\n                  {/* eslint-disable-next-line*/}\n                  <a href={e.details}>{vocabulary.details}</a>\n                  {/* eslint-disable-next-line*/}\n                  <a className=\"popup-modal-dismiss\">{vocabulary.close}</a>\n                </div>\n              </div>\n            ))\n          }\n        </div> {/* row End */}\n      </section>\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from 'react'\nimport { AppCtxStore } from \"../../App.context\"\nexport default class Testimonials extends Component {\n  static contextType = AppCtxStore\n  render() {\n    var vocabulary = this.context.getVocabulary()\n    return (\n      <React.Fragment>\n      <section id=\"testimonials\" className=\"no-print\">\n        <div className=\"text-container\">\n          <div className=\"row\">\n            <div className=\"two columns header-col\">\n              <h1><span>{vocabulary.client_testimonials}</span></h1>\n            </div>\n            <div className=\"ten columns flex-container\">\n              <div className=\"flexslider\">\n                <ul className=\"slides\">\n                {\n                  vocabulary.testimonials_elements.map((e, k)=>(\n                    <li key={\"testimonials-\"+k}>\n                      <blockquote>\n                        <p>\n                          {e.description}\n                        </p>\n                        <cite>\n                          {e.from}\n                        </cite>\n                      </blockquote>\n                    </li>\n                  ))\n                }\n                </ul>\n              </div> {/* div.flexslider ends */}\n            </div> {/* div.flex-container ends */}\n          </div> {/* row ends */}\n        </div>  {/* text-container ends */}\n      </section>\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    return (\n      <React.Fragment>\n      <footer className=\"no-print\">\n        <div className=\"row\">\n          <div className=\"twelve columns\">\n            <ul className=\"social-links no-print\">\n              <li><a href=\"https://www.facebook.com/nello1997\"><i className=\"fa fa-facebook\" /></a></li>\n              <li><a href=\"https://wa.me/+393457086780\"><i className=\"fa fa-whatsapp\" /></a></li>\n              <li><a href=\"https://github.com/Nek97\"><i className=\"fa fa-github\" /></a></li>\n              <li><a href=\"https://www.linkedin.com/in/devnek97/\"><i className=\"fa fa-linkedin\" /></a></li>\n              <li><a href=\"https://www.instagram.com/nek97/\"><i className=\"fa fa-instagram\" /></a></li>\n            </ul>\n            <ul className=\"copyright\">\n              <li>© Copyright 2020 Tortora Aniello</li>\n              <li>Realized by <a title=\"Styleshout\" href=\"https://github.com/Nek97\">Tortora Aniello</a></li>   \n            </ul>\n          </div>\n          <div id=\"go-top\" className=\"no-print\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n        </div>\n      </footer>\n      </React.Fragment>\n    );\n  }\n}","import React from 'react'\nimport AppContext from \"./App.context\"\nimport Header from './components/header/header'\nimport About from './components/about/about'\nimport Resume from './components/resume/resume'\nimport Portfolio from './components/portfolio/portfolio'\nimport Testimonials from  './components/testimonials/testimonials'\nimport Footer from './components/footer/footer'\n\nclass App extends React.Component {\n  render(){\n    return (\n      <AppContext>\n        {context => \n          <div className=\"App\">\n            <Header/>\n            <About/>\n            <Resume/>\n            <Portfolio/>\n            <Testimonials/>\n            <Footer/>\n          </div>\n          }\n        </AppContext>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\nserviceWorker.unregister();\n"],"sourceRoot":""}